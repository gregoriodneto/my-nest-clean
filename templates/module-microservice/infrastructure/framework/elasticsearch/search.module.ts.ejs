import { Global, Module } from '@nestjs/common';
import { ConfigModule, ConfigService } from '@nestjs/config';
import { ElasticsearchModule } from '@nestjs/elasticsearch';
import { SearchAuthRepository } from './search-auth.repository';

@Global()
@Module({
  imports: [
    ConfigModule,
    ElasticsearchModule.register({
      node: 'http://localhost:9200', // ou não está passando nada
    })
    /*ElasticsearchModule.registerAsync({
      imports: [ConfigModule],
      useFactory: (cfg: ConfigService) => {
        const node = cfg.get<string>('ELASTIC_NODE');
        const apiKey = cfg.get<string>('ELASTIC_API_KEY');
        const serverMode = cfg.get<string>('ELASTIC_SERVERLESS');
        
        return {
          node,
          ...(apiKey ? { auth: { apiKey } } : {}),
          ...(serverMode ? { serverMode: 'serverless' } : {})
        }
      },
      inject: [ConfigService],
    })*/
  ],
  providers: [SearchAuthRepository],
  exports: [SearchAuthRepository],
})
export class SearchModule {}