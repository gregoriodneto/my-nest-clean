import { Body, Controller, Get, Param, Patch, Post } from '@nestjs/common';
import {
  ApiBody,
  ApiCreatedResponse,
  ApiOkResponse,
  ApiOperation,
  ApiParam,
  ApiTags,
} from '@nestjs/swagger';

import { Create<%= pascalName %>Dto } from '../dto/create-<%= kebabName %>.dto';
import { Update<%= pascalName %>Dto } from '../dto/update-<%= kebabName %>.dto';

import { <%= pascalName %>Service } from 'src/<%= kebabName %>/application/services/<%= kebabName %>.service';

@ApiTags('<%= pascalName %>')
@Controller('<%= kebabName %>')
export class <%= pascalName %>Controller {
  constructor(private readonly <%= camelName %>Service: <%= pascalName %>Service) {}

  /* ────────────────────────────────────────────────
     POST /<%= kebabName %>
  ──────────────────────────────────────────────── */
  @Post()
  @ApiOperation({ summary: 'Criar <%= kebabName %>.' })
  @ApiBody({ type: Create<%= pascalName %>Dto })
  @ApiCreatedResponse({ description: '<%= pascalName %> criado com sucesso' })
  create(@Body() dto: Create<%= pascalName %>Dto) {
    return this.<%= camelName %>Service.create(dto);
  }

  /* ────────────────────────────────────────────────
     GET /<%= kebabName %>
  ──────────────────────────────────────────────── */
  @Get()
  @ApiOperation({ summary: 'Listar <%= kebabName %>.' })
  @ApiOkResponse({ description: 'Lista de <%= kebabName %>.' })
  findAll() {
    return this.<%= camelName %>Service.findAll();
  }

  /* ────────────────────────────────────────────────
     GET /<%= kebabName %>/:id
  ──────────────────────────────────────────────── */
  @Get(':id')
  @ApiOperation({ summary: 'Buscar <%= kebabName %> por ID.' })
  @ApiParam({ name: 'id', description: 'ID do <%= kebabName %>', type: String })
  @ApiOkResponse({ description: '<%= pascalName %> encontrado.' })
  findOne(@Param('id') id: string) {
    return this.<%= camelName %>Service.findOne(id);
  }

  /* ────────────────────────────────────────────────
     PATCH /<%= kebabName %>/:id
  ──────────────────────────────────────────────── */
  @Patch(':id')
  @ApiOperation({ summary: 'Atualizar <%= kebabName %>.' })
  @ApiParam({ name: 'id', description: 'ID do <%= kebabName %>', type: String })
  @ApiBody({ type: Update<%= pascalName %>Dto })
  @ApiOkResponse({ description: '<%= pascalName %> atualizado.' })
  update(@Param('id') id: string, @Body() dto: Update<%= pascalName %>Dto) {
    return this.<%= camelName %>Service.update(id, dto);
  }
}