export interface IFormatElasticsearchIndex {
  index: string;
  id?: string;
  body?: any;
}

export interface IFormatElasticsearchSearch {
  index: string;
  query?: any;
}

export interface IElasticsearch {
  save<T = any>(data: IFormatElasticsearchIndex): Promise<string>;
  search<T = any>(data?: IFormatElasticsearchSearch): Promise<T[]>;
  delete(index: string, id: string): Promise<void>;
  update<T = any>(index: string, id: string, doc: Partial<T>): Promise<T>;
  exists(index: string, id: string): Promise<boolean>;
}

export const ELASTIC_REPOSITORY = Symbol("ELASTIC_REPOSITORY");